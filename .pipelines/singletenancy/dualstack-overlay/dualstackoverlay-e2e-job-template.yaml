parameters:
  name: ""
  displayName: ""
  clusterType: ""
  clusterName: ""
  vmSize: ""
  k8sVersion: ""
  dependsOn: ""

stages:
  - stage: ${{ parameters.clusterName }}
    displayName: Create Cluster - ${{ parameters.displayName }}
    dependsOn:
      - ${{ parameters.dependsOn }}
      - setup
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
      ACN_DIR: $(Build.SourcesDirectory)
    jobs:
      - template: ../../templates/create-cluster.yaml
        parameters:
          name: ${{ parameters.name }}
          displayName: ${{ parameters.displayName }}
          clusterType: ${{ parameters.clusterType }}
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          vmSize: ${{ parameters.vmSize }}
          k8sVersion: ${{ parameters.k8sVersion }}
          dependsOn: ${{ parameters.dependsOn }}
          region: $(REGION_DUALSTACKOVERLAY_CLUSTER_TEST) # Dualstack has a specific region requirement

  - stage: ${{ parameters.name }}
    condition: and( succeeded(), not(eq(dependencies.dualstackoverlaye2e.result,'SucceededWithIssues')) ) # Cant use parameters in dependencies
    displayName: E2E - ${{ parameters.displayName }}
    dependsOn:
    - setup
    - publish
    - ${{ parameters.clusterName }}
    variables:
      GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
      GOBIN: "$(GOPATH)/bin" # Go binaries path
      modulePath: "$(GOPATH)/src/github.com/Azure/azure-container-networking"
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
      ACN_DIR: $(Build.SourcesDirectory)
    jobs:
      - job: ${{ parameters.name }}_linux
        displayName: DualStack Overlay Test Suite | Linux - (${{ parameters.name }})
        timeoutInMinutes: 120
        pool:
          isCustom: true
          type: linux
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        variables:
          ob_outputDirectory: $(Build.ArtifactStagingDirectory)/output
          ob_git_checkout: true
        steps:
          - checkout: azure-container-networking
            clean: true

          - template: dualstackoverlay-e2e-step-template.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: linux
              scaleup: 100

      - job: windows_nodepool
        displayName: Add Windows Nodepool
        dependsOn: ${{ parameters.name }}_linux
        pool:
          isCustom: true
          type: linux
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        variables:
          ob_outputDirectory: $(Build.ArtifactStagingDirectory)/output
          ob_git_checkout: true
        steps:
          - checkout: azure-container-networking
            clean: true

          - task: AzureCLI@2
            inputs:
              azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -e
                make -C ./hack/aks set-kubeconf AZCLI=az CLUSTER=${{ parameters.clusterName }}-$(commitID)
                make -C ./hack/aks windows-nodepool-up AZCLI=az SUB=$(SUB_AZURE_NETWORK_AGENT_BUILD_VALIDATIONS) CLUSTER=${{ parameters.clusterName }}-$(commitID) VM_SIZE_WIN=${{ parameters.vmSize }}
                echo "Windows nodes have been successfully added to DualStack Overlay Cluster"
                kubectl cluster-info
                kubectl get node -owide
                kubectl get po -owide -A
            name: "Add_Windows_Node"
            displayName: "Add windows node"

      - job: ${{ parameters.name }}_windows
        displayName: DualStack Overlay Test Suite | Windows - (${{ parameters.name }})
        timeoutInMinutes: 120
        dependsOn: windows_nodepool
        pool:
          isCustom: true
          type: linux
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        variables:
          ob_outputDirectory: $(Build.ArtifactStagingDirectory)/output
          ob_git_checkout: true
        steps:
          - checkout: azure-container-networking
            clean: true

          - template: dualstackoverlay-e2e-step-template.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: windows
              scaleup: 50

      - template: ../../cni/k8s-e2e/k8s-e2e-job-template.yaml
        parameters:
          sub: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          os: linux
          dependsOn: ${{ parameters.name }}_windows
          dualstack: true
          dns: true
          portforward: true
          hostport: true
          service: true

      - template: ../../cni/k8s-e2e/k8s-e2e-job-template.yaml
        parameters:
          sub: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          os: windows
          dependsOn: cni_linux
          dualstack: true
          dns: true
          portforward: true
          service: true
          hostport: true
          hybridWin: true

      - job: failedE2ELogs_linux
        displayName: "Linux Failure Logs"
        dependsOn:
          - ${{ parameters.name }}_linux
          - cni_linux
        condition: in(dependencies.${{ parameters.name }}_linux.result, 'Failed')
        pool:
          isCustom: true
          type: linux
          name: $(BUILD_POOL_NAME_DEFAULT)
        variables:
          ob_outputDirectory: $(Build.ArtifactStagingDirectory)/output
          ob_git_checkout: true
        steps:
          - template: ../../templates/log-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: linux
              cni: cniv2

      - job: failedE2ELogs_windows
        displayName: "Windows Failure Logs"
        dependsOn:
          - ${{ parameters.name }}_windows
          - cni_windows
        condition: in(dependencies.${{ parameters.name }}_windows.result, 'Failed')
        pool:
          isCustom: true
          type: linux
          name: $(BUILD_POOL_NAME_DEFAULT)
        variables:
          ob_outputDirectory: $(Build.ArtifactStagingDirectory)/output
          ob_git_checkout: true
        steps:
          - template: ../../templates/log-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: windows
              cni: cniv2
